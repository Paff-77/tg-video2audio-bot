name: Build and Push Docker image

on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]   # 打 vX.Y.Z 标签时发布对应版本
  workflow_dispatch: {}   # 手动触发

env:
  # 平台矩阵（需要 QEMU）
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_REPO }}
          tags: |
            # 给默认分支打 latest
            type=raw,value=latest,enable={{is_default_branch}}
            # 当 push tag=vX.Y.Z 时，产出 1.2.3 和 1.2
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            # 基于提交 SHA 的标签（便于追溯）
            type=sha
          labels: |
            org.opencontainers.image.title=tg-video2audio-bot
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
